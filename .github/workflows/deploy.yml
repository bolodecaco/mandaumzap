name: Deploy to Production

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./server
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/mandaumzap:latest
      
      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          COMPOSE_CONTENT: ${{ secrets.COMPOSE_CONTENT }}
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          envs: DOCKER_USERNAME,COMPOSE_CONTENT
          script: |
            cd ~/server/mandaumzap
            
            # Check if directory exists, if not create it
            mkdir -p ~/server/mandaumzap
            
            # Check if file exists, if not create it
            if [ ! -f docker-compose.prod.yml ]; then
              echo "Creating docker-compose.prod.yml..."
              cat > docker-compose.prod.yml << 'EOL'
              ${{ secrets.COMPOSE_CONTENT }}
            EOL
            else
              echo "docker-compose.prod.yml already exists"
            fi
            
            # Continue with deployment
            if ! docker compose -f docker-compose.prod.yml ps | grep -q spring-app; then
              echo "First deployment detected. Initializing all services..."
              docker compose -f docker-compose.prod.yml up -d
            else
              echo "Updating backend only..."
              docker compose -f docker-compose.prod.yml pull spring-app
              docker images -q ${{ secrets.DOCKER_USERNAME }}/mandaumzap:latest | xargs -r docker rmi || true
              docker compose -f docker-compose.prod.yml up -d --no-deps spring-app
              docker image prune -f
            fi
