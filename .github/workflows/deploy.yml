name: Deploy to Production

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./server
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/mandaumzap:latest

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          envs: DOCKER_USERNAME
          script: |
              cd ~/server/mandaumzap
              
              # Criar docker-compose.prod.yml se não existir
              if [ ! -f docker-compose.prod.yml ]; then
                echo "Primeiro deploy detectado. Criando docker-compose.prod.yml..."
                cat > docker-compose.prod.yml << 'EOL'
                ${{ secrets.COMPOSE }}
                EOL
              fi
              
              # Verifica se o serviço já existe
              if ! docker compose -f docker-compose.prod.yml ps | grep -q spring-app; then
                echo "Parece ser o primeiro deploy. Inicializando tudo..."
                docker compose -f docker-compose.prod.yml up -d
              else
                echo "Atualizando apenas o backend..."
                
                # Baixar nova imagem sem parar os containers
                docker compose -f docker-compose.prod.yml pull spring-app
                
                # Remover imagem antiga apenas se necessário
                docker images -q ${{ secrets.DOCKER_USERNAME }}/mandaumzap:latest | xargs -r docker rmi || true
                
                # Reiniciar apenas o serviço do backend (sem mexer no banco)
                docker compose -f docker-compose.prod.yml up -d --no-deps spring-app

                # Remover imagens antigas não usadas
                docker image prune -f
              fi
